{"version":3,"sources":["Form.js","Card.js","CardList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","userName","handleSubmit","event","a","preventDefault","axios","get","resp","props","onSubmit","data","setState","this","type","value","onChange","target","placeholder","required","React","Component","Card","profile","console","log","className","src","avatar_url","name","location","CardList","profiles","map","id","App","addNewProfile","profileData","prevState","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTA2BeA,E,4MAvBdC,MAAQ,CAAEC,SAAU,I,EACpBC,a,uCAAe,WAAOC,GAAP,eAAAC,EAAA,6DACbD,EAAME,iBADO,SAEOC,IAAMC,IAAN,uCAA0C,EAAKP,MAAMC,WAF5D,OAENO,EAFM,OAGZ,EAAKC,MAAMC,SAASF,EAAKG,MACzB,EAAKC,SAAS,CAAEX,SAAU,KAJd,2C,kGAMf,WAAU,IAAD,OACP,OACE,uBAAMS,SAAUG,KAAKX,aAArB,UACE,uBACGY,KAAK,OACLC,MAAOF,KAAKb,MAAMC,SAClBe,SAAU,SAAAb,GAAK,OAAI,EAAKS,SAAS,CAAEX,SAAUE,EAAMc,OAAOF,SAC1DG,YAAY,kBACZC,UAAQ,IAEV,qD,GAlBWC,IAAMC,WCeVC,E,4JAfd,WACE,IAAMC,EAAUV,KAAKJ,MAErB,OADCe,QAAQC,IAAIF,GAEX,sBAAKG,UAAU,iBAAf,UACE,qBAAKC,IAAKJ,EAAQK,aACjB,sBAAKF,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBH,EAAQM,OAC/B,qBAAKH,UAAU,WAAf,SAA2BH,EAAQO,qB,GAT1BV,IAAMC,W,QCMVU,EANE,SAACtB,GAAD,OAChB,8BACGA,EAAMuB,SAASC,KAAI,SAAAV,GAAO,OAAI,cAAC,EAAD,eAA2BA,GAAhBA,EAAQW,UCsBtCC,E,4MAnBbnC,MAAQ,CACNgC,SAAU,I,EAEZI,cAAgB,SAACC,GAChB,EAAKzB,UAAS,SAAA0B,GAAS,MAAK,CAC1BN,SAAS,GAAD,mBAAMM,EAAUN,UAAhB,CAA0BK,S,4CAGtC,WACE,OACE,gCACE,qBAAKX,UAAU,SAAf,SAAyBb,KAAKJ,MAAM8B,QACnC,cAAC,EAAD,CAAM7B,SAAUG,KAAKuB,gBACrB,cAAC,EAAD,CAAUJ,SAAUnB,KAAKb,MAAMgC,kB,GAdrBZ,IAAMC,WCMTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKZ,MAAM,2BAEba,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8083ffba.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Form extends React.Component {\r\n\tstate = { userName: '' };\r\n\thandleSubmit = async (event) => {\r\n  \tevent.preventDefault();\r\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\r\n    this.props.onSubmit(resp.data);\r\n    this.setState({ userName: '' });\r\n  };\r\n\trender() {\r\n  \treturn (\r\n    \t<form onSubmit={this.handleSubmit}>\r\n    \t  <input \r\n          type=\"text\" \r\n          value={this.state.userName}\r\n          onChange={event => this.setState({ userName: event.target.value })}\r\n          placeholder=\"GitHub username\" \r\n          required \r\n        />\r\n        <button>Add card</button>\r\n    \t</form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nclass Card extends React.Component {\r\n\trender() {\r\n  \tconst profile = this.props;\r\n    console.log(profile);\r\n  \treturn (\r\n    \t<div className=\"github-profile\">\r\n    \t  <img src={profile.avatar_url} />\r\n        <div className=\"info\">\r\n          <div className=\"name\">{profile.name}</div>\r\n          <div className=\"location\">{profile.location}</div>\r\n        </div>\r\n    \t</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nconst CardList = (props) => (\r\n\t<div>\r\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\r\n\t</div>\r\n);\r\n\r\nexport default CardList;","import React from 'react';\nimport './App.css';\nimport Form from './Form';\nimport Card from './Card';\nimport CardList from './CardList';\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n  \tthis.setState(prevState => ({\n    \tprofiles: [...prevState.profiles, profileData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div className=\"header\">{this.props.title}</div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App title=\"The GitHub Cards App\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}